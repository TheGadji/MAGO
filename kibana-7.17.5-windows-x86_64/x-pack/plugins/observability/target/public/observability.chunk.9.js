/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.observability_bundle_jsonpfunction=window.observability_bundle_jsonpfunction||[]).push([[9],{109:function(e,t,n){"use strict";n.r(t),n.d(t,"buildFilterLabel",(function(){return u})),n.d(t,"FilterValueLabel",(function(){return d}));var i=n(1),l=n.n(i),a=n(66),r=n(16),s=n(11);function u({field:e,value:t,label:n,indexPattern:i,negate:l}){const a=i.getFieldByName(e),s=t instanceof Array&&t.length>1?r.esFilters.buildPhrasesFilter(a,t,i):r.esFilters.buildPhraseFilter(a,t,i);return s.meta.type=t instanceof Array&&t.length>1?"phrases":"phrase",s.meta.value=t,s.meta.key=n,s.meta.alias=null,s.meta.negate=l,s.meta.disabled=!1,s}function d({label:e,field:t,value:n,negate:i,indexPattern:d,invertFilter:o,removeFilter:b,allowExclusion:c=!0}){const f=Object(a.injectI18n)(r.esFilters.FilterItem),F=u({field:t,value:n,label:e,indexPattern:d,negate:i}),{services:{uiSettings:g}}=Object(s.useKibana)();return d?l.a.createElement(f,{indexPatterns:[d],id:`${t}-${n}-${i}`,filter:F,onRemove:()=>{b(t,n,!1)},onUpdate:e=>{e.meta.negate!==i&&o({field:t,value:n,negate:i})},uiSettings:g,hiddenPanelOptions:[...c?[]:["negateFilter"],"pinFilter","editFilter","disableFilter"]}):null}t.default=d}}]);