/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[23],{149:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n(15);var s=n(40),i=n(11);const r=()=>Object(i.jsx)(s.EuiText,{textAlign:"center"},Object(i.jsx)(s.EuiSpacer,{size:"l"}),Object(i.jsx)(s.EuiLoadingSpinner,{size:"l"}),Object(i.jsx)(s.EuiSpacer,{size:"l"}))},253:function(e,t,n){"use strict";n.r(t),n.d(t,"getDefaultSwimlanePanelTitle",(function(){return x})),n.d(t,"AnomalySwimlaneEmbeddable",(function(){return anomaly_swimlane_embeddable_AnomalySwimlaneEmbeddable}));var s=n(4),i=n.n(s),r=n(15),o=n.n(r),a=n(49),d=n.n(a),l=n(2),u=n(23),b=n(42),h=n(45);const m=o.a.lazy((()=>Promise.all([n.e(1),n.e(19)]).then(n.bind(null,763))));var c=n(162),p=n(103),j=n(149),g=n(11);const x=e=>l.i18n.translate("xpack.ml.swimlaneEmbeddable.title",{defaultMessage:"ML anomaly swim lane for {jobIds}",values:{jobIds:e.join(", ")}});class anomaly_swimlane_embeddable_AnomalySwimlaneEmbeddable extends h.Embeddable{constructor(e,t,n){super(e,{defaultTitle:e.title},n),i()(this,"node",void 0),i()(this,"reload$",new u.Subject),i()(this,"type",p.b),this.services=t}onLoading(){this.renderComplete.dispatchInProgress(),this.updateOutput({loading:!0,error:void 0})}onError(e){this.renderComplete.dispatchError(),this.updateOutput({loading:!1,error:{name:e.name,message:e.message}})}onRenderComplete(){this.renderComplete.dispatchComplete(),this.updateOutput({loading:!1,error:void 0})}render(e){super.render(e),this.node=e,this.node.setAttribute("data-shared-item","");const t=this.services[0].i18n.Context;d.a.render(Object(g.jsx)(t,null,Object(g.jsx)(b.KibanaContextProvider,{services:{...this.services[0]}},Object(g.jsx)(r.Suspense,{fallback:Object(g.jsx)(j.a,null)},Object(g.jsx)(m,{id:this.input.id,embeddableContext:this,embeddableInput:this.getInput$(),services:this.services,refresh:this.reload$.asObservable(),onInputChange:this.updateInput.bind(this),onOutputChange:this.updateOutput.bind(this),onRenderComplete:this.onRenderComplete.bind(this),onLoading:this.onLoading.bind(this),onError:this.onError.bind(this)})))),e)}destroy(){super.destroy(),this.node&&d.a.unmountComponentAtNode(this.node)}reload(){this.reload$.next()}supportedTriggers(){return[c.a]}}}}]);