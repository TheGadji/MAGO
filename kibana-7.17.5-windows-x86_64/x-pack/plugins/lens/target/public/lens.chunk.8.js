/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.lens_bundle_jsonpfunction=window.lens_bundle_jsonpfunction||[]).push([[8],{64:function(e,n,t){"use strict";t.r(n),t.d(n,"timeScaleFn",(function(){return m}));var a=t(47),o=t.n(a),s=t(0),i=t(56),l=t(16);const u={s:1e3,m:6e4,h:36e5,d:864e5},m=e=>async(n,{dateColumnId:t,inputColumnId:a,outputColumnId:m,outputColumnName:c,targetUnit:r},d)=>{const f=n.columns.find((e=>e.id===t));if(!f)throw new Error(s.i18n.translate("xpack.lens.functions.timeScale.dateColumnMissingMessage",{defaultMessage:"Specified dateColumnId {columnId} does not exist.",values:{columnId:t}}));const w=Object(i.buildResultColumns)(n,m,a,c,{allowColumnOverwrite:!0});if(!w)return n;const g=u[r],p=Object(l.getDateHistogramMetaDataByDatatableColumn)(f,{timeZone:await e(d)}),C=(null==p?void 0:p.interval)&&Object(l.parseInterval)(p.interval);if(!p||!C)throw new Error(s.i18n.translate("xpack.lens.functions.timeScale.timeInfoMissingMessage",{defaultMessage:"Could not fetch date histogram information"}));const b=o()().zoneName();o.a.tz.setDefault(p.timeZone);const I=p.timeRange&&Object(l.calculateBounds)(p.timeRange),v={...n,columns:w,rows:n.rows.map((e=>{const n={...e};let s=o()(e[t]),i=s.clone().add(C);I&&I.min&&(s=o.a.max(s,I.min)),I&&I.max&&(i=o.a.min(i,I.max));const l=i.diff(s)/g,u=n[a];return null!=u&&(n[m]=Number(u)/l),n}))};return o.a.tz.setDefault(b),v}}}]);